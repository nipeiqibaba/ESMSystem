<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.mapper.SalarySettleMentMapper">
  <resultMap id="BaseResultMap" type="com.neu.entity.SalarySettleMent">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dname" jdbcType="VARCHAR" property="dname" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="empno" jdbcType="INTEGER" property="empno" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="real_salary" jdbcType="DOUBLE" property="realSalary" />
    <result column="basic_salary" jdbcType="DOUBLE" property="basicSalary" />
    <result column="subsidies" jdbcType="DOUBLE" property="subsidies" />
    <result column="sick_num" jdbcType="INTEGER" property="sickNum" />
    <result column="sick_deductions" jdbcType="DOUBLE" property="sickDeductions" />
    <result column="per_num" jdbcType="INTEGER" property="perNum" />
    <result column="per_deductions" jdbcType="DOUBLE" property="perDeductions" />
    <result column="work_num" jdbcType="INTEGER" property="workNum" />
    <result column="work_salary" jdbcType="DOUBLE" property="workSalary" />
    <result column="late_num" jdbcType="INTEGER" property="lateNum" />
    <result column="late_deductions" jdbcType="DOUBLE" property="lateDeductions" />
    <result column="per_old_insurance" jdbcType="DOUBLE" property="perOldInsurance" />
    <result column="com_old_insurance" jdbcType="DOUBLE" property="comOldInsurance" />
    <result column="per_med_insurance" jdbcType="DOUBLE" property="perMedInsurance" />
    <result column="com_med_insurance" jdbcType="DOUBLE" property="comMedInsurance" />
    <result column="per_fund" jdbcType="DOUBLE" property="perFund" />
    <result column="com_fund" jdbcType="DOUBLE" property="comFund" />
    <result column="ind_income_tax" jdbcType="DOUBLE" property="indIncomeTax" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, dname, time, empno, ename, real_salary, basic_salary, subsidies, sick_num, sick_deductions, 
    per_num, per_deductions, work_num, work_salary, late_num, late_deductions, per_old_insurance, 
    com_old_insurance, per_med_insurance, com_med_insurance, per_fund, com_fund, ind_income_tax, 
    note
  </sql>
  <select id="selectByExample" parameterType="com.neu.entity.SalarySettleMentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from salary_settle_ment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from salary_settle_ment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from salary_settle_ment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.entity.SalarySettleMentExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from salary_settle_ment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.entity.SalarySettleMent">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into salary_settle_ment (dname, time, empno, 
      ename, real_salary, basic_salary, 
      subsidies, sick_num, sick_deductions, 
      per_num, per_deductions, work_num, 
      work_salary, late_num, late_deductions, 
      per_old_insurance, com_old_insurance, per_med_insurance, 
      com_med_insurance, per_fund, com_fund, 
      ind_income_tax, note)
    values (#{dname,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{empno,jdbcType=INTEGER}, 
      #{ename,jdbcType=VARCHAR}, #{realSalary,jdbcType=DOUBLE}, #{basicSalary,jdbcType=DOUBLE}, 
      #{subsidies,jdbcType=DOUBLE}, #{sickNum,jdbcType=INTEGER}, #{sickDeductions,jdbcType=DOUBLE}, 
      #{perNum,jdbcType=INTEGER}, #{perDeductions,jdbcType=DOUBLE}, #{workNum,jdbcType=INTEGER}, 
      #{workSalary,jdbcType=DOUBLE}, #{lateNum,jdbcType=INTEGER}, #{lateDeductions,jdbcType=DOUBLE}, 
      #{perOldInsurance,jdbcType=DOUBLE}, #{comOldInsurance,jdbcType=DOUBLE}, #{perMedInsurance,jdbcType=DOUBLE}, 
      #{comMedInsurance,jdbcType=DOUBLE}, #{perFund,jdbcType=DOUBLE}, #{comFund,jdbcType=DOUBLE}, 
      #{indIncomeTax,jdbcType=DOUBLE}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neu.entity.SalarySettleMent">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into salary_settle_ment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dname != null">
        dname,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="empno != null">
        empno,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="realSalary != null">
        real_salary,
      </if>
      <if test="basicSalary != null">
        basic_salary,
      </if>
      <if test="subsidies != null">
        subsidies,
      </if>
      <if test="sickNum != null">
        sick_num,
      </if>
      <if test="sickDeductions != null">
        sick_deductions,
      </if>
      <if test="perNum != null">
        per_num,
      </if>
      <if test="perDeductions != null">
        per_deductions,
      </if>
      <if test="workNum != null">
        work_num,
      </if>
      <if test="workSalary != null">
        work_salary,
      </if>
      <if test="lateNum != null">
        late_num,
      </if>
      <if test="lateDeductions != null">
        late_deductions,
      </if>
      <if test="perOldInsurance != null">
        per_old_insurance,
      </if>
      <if test="comOldInsurance != null">
        com_old_insurance,
      </if>
      <if test="perMedInsurance != null">
        per_med_insurance,
      </if>
      <if test="comMedInsurance != null">
        com_med_insurance,
      </if>
      <if test="perFund != null">
        per_fund,
      </if>
      <if test="comFund != null">
        com_fund,
      </if>
      <if test="indIncomeTax != null">
        ind_income_tax,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dname != null">
        #{dname,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="empno != null">
        #{empno,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="realSalary != null">
        #{realSalary,jdbcType=DOUBLE},
      </if>
      <if test="basicSalary != null">
        #{basicSalary,jdbcType=DOUBLE},
      </if>
      <if test="subsidies != null">
        #{subsidies,jdbcType=DOUBLE},
      </if>
      <if test="sickNum != null">
        #{sickNum,jdbcType=INTEGER},
      </if>
      <if test="sickDeductions != null">
        #{sickDeductions,jdbcType=DOUBLE},
      </if>
      <if test="perNum != null">
        #{perNum,jdbcType=INTEGER},
      </if>
      <if test="perDeductions != null">
        #{perDeductions,jdbcType=DOUBLE},
      </if>
      <if test="workNum != null">
        #{workNum,jdbcType=INTEGER},
      </if>
      <if test="workSalary != null">
        #{workSalary,jdbcType=DOUBLE},
      </if>
      <if test="lateNum != null">
        #{lateNum,jdbcType=INTEGER},
      </if>
      <if test="lateDeductions != null">
        #{lateDeductions,jdbcType=DOUBLE},
      </if>
      <if test="perOldInsurance != null">
        #{perOldInsurance,jdbcType=DOUBLE},
      </if>
      <if test="comOldInsurance != null">
        #{comOldInsurance,jdbcType=DOUBLE},
      </if>
      <if test="perMedInsurance != null">
        #{perMedInsurance,jdbcType=DOUBLE},
      </if>
      <if test="comMedInsurance != null">
        #{comMedInsurance,jdbcType=DOUBLE},
      </if>
      <if test="perFund != null">
        #{perFund,jdbcType=DOUBLE},
      </if>
      <if test="comFund != null">
        #{comFund,jdbcType=DOUBLE},
      </if>
      <if test="indIncomeTax != null">
        #{indIncomeTax,jdbcType=DOUBLE},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.entity.SalarySettleMentExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from salary_settle_ment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update salary_settle_ment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dname != null">
        dname = #{record.dname,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.empno != null">
        empno = #{record.empno,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.realSalary != null">
        real_salary = #{record.realSalary,jdbcType=DOUBLE},
      </if>
      <if test="record.basicSalary != null">
        basic_salary = #{record.basicSalary,jdbcType=DOUBLE},
      </if>
      <if test="record.subsidies != null">
        subsidies = #{record.subsidies,jdbcType=DOUBLE},
      </if>
      <if test="record.sickNum != null">
        sick_num = #{record.sickNum,jdbcType=INTEGER},
      </if>
      <if test="record.sickDeductions != null">
        sick_deductions = #{record.sickDeductions,jdbcType=DOUBLE},
      </if>
      <if test="record.perNum != null">
        per_num = #{record.perNum,jdbcType=INTEGER},
      </if>
      <if test="record.perDeductions != null">
        per_deductions = #{record.perDeductions,jdbcType=DOUBLE},
      </if>
      <if test="record.workNum != null">
        work_num = #{record.workNum,jdbcType=INTEGER},
      </if>
      <if test="record.workSalary != null">
        work_salary = #{record.workSalary,jdbcType=DOUBLE},
      </if>
      <if test="record.lateNum != null">
        late_num = #{record.lateNum,jdbcType=INTEGER},
      </if>
      <if test="record.lateDeductions != null">
        late_deductions = #{record.lateDeductions,jdbcType=DOUBLE},
      </if>
      <if test="record.perOldInsurance != null">
        per_old_insurance = #{record.perOldInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.comOldInsurance != null">
        com_old_insurance = #{record.comOldInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.perMedInsurance != null">
        per_med_insurance = #{record.perMedInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.comMedInsurance != null">
        com_med_insurance = #{record.comMedInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.perFund != null">
        per_fund = #{record.perFund,jdbcType=DOUBLE},
      </if>
      <if test="record.comFund != null">
        com_fund = #{record.comFund,jdbcType=DOUBLE},
      </if>
      <if test="record.indIncomeTax != null">
        ind_income_tax = #{record.indIncomeTax,jdbcType=DOUBLE},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update salary_settle_ment
    set id = #{record.id,jdbcType=INTEGER},
      dname = #{record.dname,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      empno = #{record.empno,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      real_salary = #{record.realSalary,jdbcType=DOUBLE},
      basic_salary = #{record.basicSalary,jdbcType=DOUBLE},
      subsidies = #{record.subsidies,jdbcType=DOUBLE},
      sick_num = #{record.sickNum,jdbcType=INTEGER},
      sick_deductions = #{record.sickDeductions,jdbcType=DOUBLE},
      per_num = #{record.perNum,jdbcType=INTEGER},
      per_deductions = #{record.perDeductions,jdbcType=DOUBLE},
      work_num = #{record.workNum,jdbcType=INTEGER},
      work_salary = #{record.workSalary,jdbcType=DOUBLE},
      late_num = #{record.lateNum,jdbcType=INTEGER},
      late_deductions = #{record.lateDeductions,jdbcType=DOUBLE},
      per_old_insurance = #{record.perOldInsurance,jdbcType=DOUBLE},
      com_old_insurance = #{record.comOldInsurance,jdbcType=DOUBLE},
      per_med_insurance = #{record.perMedInsurance,jdbcType=DOUBLE},
      com_med_insurance = #{record.comMedInsurance,jdbcType=DOUBLE},
      per_fund = #{record.perFund,jdbcType=DOUBLE},
      com_fund = #{record.comFund,jdbcType=DOUBLE},
      ind_income_tax = #{record.indIncomeTax,jdbcType=DOUBLE},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.entity.SalarySettleMent">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update salary_settle_ment
    <set>
      <if test="dname != null">
        dname = #{dname,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="empno != null">
        empno = #{empno,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="realSalary != null">
        real_salary = #{realSalary,jdbcType=DOUBLE},
      </if>
      <if test="basicSalary != null">
        basic_salary = #{basicSalary,jdbcType=DOUBLE},
      </if>
      <if test="subsidies != null">
        subsidies = #{subsidies,jdbcType=DOUBLE},
      </if>
      <if test="sickNum != null">
        sick_num = #{sickNum,jdbcType=INTEGER},
      </if>
      <if test="sickDeductions != null">
        sick_deductions = #{sickDeductions,jdbcType=DOUBLE},
      </if>
      <if test="perNum != null">
        per_num = #{perNum,jdbcType=INTEGER},
      </if>
      <if test="perDeductions != null">
        per_deductions = #{perDeductions,jdbcType=DOUBLE},
      </if>
      <if test="workNum != null">
        work_num = #{workNum,jdbcType=INTEGER},
      </if>
      <if test="workSalary != null">
        work_salary = #{workSalary,jdbcType=DOUBLE},
      </if>
      <if test="lateNum != null">
        late_num = #{lateNum,jdbcType=INTEGER},
      </if>
      <if test="lateDeductions != null">
        late_deductions = #{lateDeductions,jdbcType=DOUBLE},
      </if>
      <if test="perOldInsurance != null">
        per_old_insurance = #{perOldInsurance,jdbcType=DOUBLE},
      </if>
      <if test="comOldInsurance != null">
        com_old_insurance = #{comOldInsurance,jdbcType=DOUBLE},
      </if>
      <if test="perMedInsurance != null">
        per_med_insurance = #{perMedInsurance,jdbcType=DOUBLE},
      </if>
      <if test="comMedInsurance != null">
        com_med_insurance = #{comMedInsurance,jdbcType=DOUBLE},
      </if>
      <if test="perFund != null">
        per_fund = #{perFund,jdbcType=DOUBLE},
      </if>
      <if test="comFund != null">
        com_fund = #{comFund,jdbcType=DOUBLE},
      </if>
      <if test="indIncomeTax != null">
        ind_income_tax = #{indIncomeTax,jdbcType=DOUBLE},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.entity.SalarySettleMent">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update salary_settle_ment
    set dname = #{dname,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      empno = #{empno,jdbcType=INTEGER},
      ename = #{ename,jdbcType=VARCHAR},
      real_salary = #{realSalary,jdbcType=DOUBLE},
      basic_salary = #{basicSalary,jdbcType=DOUBLE},
      subsidies = #{subsidies,jdbcType=DOUBLE},
      sick_num = #{sickNum,jdbcType=INTEGER},
      sick_deductions = #{sickDeductions,jdbcType=DOUBLE},
      per_num = #{perNum,jdbcType=INTEGER},
      per_deductions = #{perDeductions,jdbcType=DOUBLE},
      work_num = #{workNum,jdbcType=INTEGER},
      work_salary = #{workSalary,jdbcType=DOUBLE},
      late_num = #{lateNum,jdbcType=INTEGER},
      late_deductions = #{lateDeductions,jdbcType=DOUBLE},
      per_old_insurance = #{perOldInsurance,jdbcType=DOUBLE},
      com_old_insurance = #{comOldInsurance,jdbcType=DOUBLE},
      per_med_insurance = #{perMedInsurance,jdbcType=DOUBLE},
      com_med_insurance = #{comMedInsurance,jdbcType=DOUBLE},
      per_fund = #{perFund,jdbcType=DOUBLE},
      com_fund = #{comFund,jdbcType=DOUBLE},
      ind_income_tax = #{indIncomeTax,jdbcType=DOUBLE},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>