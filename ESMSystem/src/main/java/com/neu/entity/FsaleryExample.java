package com.neu.entity;

import java.util.ArrayList;
import java.util.List;

public class FsaleryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public FsaleryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andEmpIsNull() {
            addCriterion("empno is null");
            return (Criteria) this;
        }

        public Criteria andEmpIsNotNull() {
            addCriterion("empno is not null");
            return (Criteria) this;
        }

        public Criteria andEmpEqualTo(Emp value) {
            addCriterion("empno =", value, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpNotEqualTo(Emp value) {
            addCriterion("empno <>", value, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpGreaterThan(Emp value) {
            addCriterion("empno >", value, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpGreaterThanOrEqualTo(Emp value) {
            addCriterion("empno >=", value, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpLessThan(Emp value) {
            addCriterion("empno <", value, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpLessThanOrEqualTo(Emp value) {
            addCriterion("empno <=", value, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpIn(List<Emp> values) {
            addCriterion("empno in", values, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpNotIn(List<Emp> values) {
            addCriterion("empno not in", values, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpBetween(Emp value1, Emp value2) {
            addCriterion("empno between", value1, value2, "emp");
            return (Criteria) this;
        }

        public Criteria andEmpNotBetween(Emp value1, Emp value2) {
            addCriterion("empno not between", value1, value2, "emp");
            return (Criteria) this;
        }

        public Criteria andBasePayIsNull() {
            addCriterion("base_pay is null");
            return (Criteria) this;
        }

        public Criteria andBasePayIsNotNull() {
            addCriterion("base_pay is not null");
            return (Criteria) this;
        }

        public Criteria andBasePayEqualTo(Integer value) {
            addCriterion("base_pay =", value, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayNotEqualTo(Integer value) {
            addCriterion("base_pay <>", value, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayGreaterThan(Integer value) {
            addCriterion("base_pay >", value, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayGreaterThanOrEqualTo(Integer value) {
            addCriterion("base_pay >=", value, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayLessThan(Integer value) {
            addCriterion("base_pay <", value, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayLessThanOrEqualTo(Integer value) {
            addCriterion("base_pay <=", value, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayIn(List<Integer> values) {
            addCriterion("base_pay in", values, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayNotIn(List<Integer> values) {
            addCriterion("base_pay not in", values, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayBetween(Integer value1, Integer value2) {
            addCriterion("base_pay between", value1, value2, "basePay");
            return (Criteria) this;
        }

        public Criteria andBasePayNotBetween(Integer value1, Integer value2) {
            addCriterion("base_pay not between", value1, value2, "basePay");
            return (Criteria) this;
        }

        public Criteria andDsaleryIsNull() {
            addCriterion("dsalery is null");
            return (Criteria) this;
        }

        public Criteria andDsaleryIsNotNull() {
            addCriterion("dsalery is not null");
            return (Criteria) this;
        }

        public Criteria andDsaleryEqualTo(Integer value) {
            addCriterion("dsalery =", value, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryNotEqualTo(Integer value) {
            addCriterion("dsalery <>", value, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryGreaterThan(Integer value) {
            addCriterion("dsalery >", value, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryGreaterThanOrEqualTo(Integer value) {
            addCriterion("dsalery >=", value, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryLessThan(Integer value) {
            addCriterion("dsalery <", value, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryLessThanOrEqualTo(Integer value) {
            addCriterion("dsalery <=", value, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryIn(List<Integer> values) {
            addCriterion("dsalery in", values, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryNotIn(List<Integer> values) {
            addCriterion("dsalery not in", values, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryBetween(Integer value1, Integer value2) {
            addCriterion("dsalery between", value1, value2, "dsalery");
            return (Criteria) this;
        }

        public Criteria andDsaleryNotBetween(Integer value1, Integer value2) {
            addCriterion("dsalery not between", value1, value2, "dsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryIsNull() {
            addCriterion("jsalery is null");
            return (Criteria) this;
        }

        public Criteria andJsaleryIsNotNull() {
            addCriterion("jsalery is not null");
            return (Criteria) this;
        }

        public Criteria andJsaleryEqualTo(Integer value) {
            addCriterion("jsalery =", value, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryNotEqualTo(Integer value) {
            addCriterion("jsalery <>", value, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryGreaterThan(Integer value) {
            addCriterion("jsalery >", value, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryGreaterThanOrEqualTo(Integer value) {
            addCriterion("jsalery >=", value, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryLessThan(Integer value) {
            addCriterion("jsalery <", value, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryLessThanOrEqualTo(Integer value) {
            addCriterion("jsalery <=", value, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryIn(List<Integer> values) {
            addCriterion("jsalery in", values, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryNotIn(List<Integer> values) {
            addCriterion("jsalery not in", values, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryBetween(Integer value1, Integer value2) {
            addCriterion("jsalery between", value1, value2, "jsalery");
            return (Criteria) this;
        }

        public Criteria andJsaleryNotBetween(Integer value1, Integer value2) {
            addCriterion("jsalery not between", value1, value2, "jsalery");
            return (Criteria) this;
        }

        public Criteria andHwagesIsNull() {
            addCriterion("hwages is null");
            return (Criteria) this;
        }

        public Criteria andHwagesIsNotNull() {
            addCriterion("hwages is not null");
            return (Criteria) this;
        }

        public Criteria andHwagesEqualTo(Integer value) {
            addCriterion("hwages =", value, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesNotEqualTo(Integer value) {
            addCriterion("hwages <>", value, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesGreaterThan(Integer value) {
            addCriterion("hwages >", value, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesGreaterThanOrEqualTo(Integer value) {
            addCriterion("hwages >=", value, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesLessThan(Integer value) {
            addCriterion("hwages <", value, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesLessThanOrEqualTo(Integer value) {
            addCriterion("hwages <=", value, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesIn(List<Integer> values) {
            addCriterion("hwages in", values, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesNotIn(List<Integer> values) {
            addCriterion("hwages not in", values, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesBetween(Integer value1, Integer value2) {
            addCriterion("hwages between", value1, value2, "hwages");
            return (Criteria) this;
        }

        public Criteria andHwagesNotBetween(Integer value1, Integer value2) {
            addCriterion("hwages not between", value1, value2, "hwages");
            return (Criteria) this;
        }

        public Criteria andFsaleIsNull() {
            addCriterion("fsale is null");
            return (Criteria) this;
        }

        public Criteria andFsaleIsNotNull() {
            addCriterion("fsale is not null");
            return (Criteria) this;
        }

        public Criteria andFsaleEqualTo(Integer value) {
            addCriterion("fsale =", value, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleNotEqualTo(Integer value) {
            addCriterion("fsale <>", value, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleGreaterThan(Integer value) {
            addCriterion("fsale >", value, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleGreaterThanOrEqualTo(Integer value) {
            addCriterion("fsale >=", value, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleLessThan(Integer value) {
            addCriterion("fsale <", value, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleLessThanOrEqualTo(Integer value) {
            addCriterion("fsale <=", value, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleIn(List<Integer> values) {
            addCriterion("fsale in", values, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleNotIn(List<Integer> values) {
            addCriterion("fsale not in", values, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleBetween(Integer value1, Integer value2) {
            addCriterion("fsale between", value1, value2, "fsale");
            return (Criteria) this;
        }

        public Criteria andFsaleNotBetween(Integer value1, Integer value2) {
            addCriterion("fsale not between", value1, value2, "fsale");
            return (Criteria) this;
        }

        public Criteria andDelmarkIsNull() {
            addCriterion("delmark is null");
            return (Criteria) this;
        }

        public Criteria andDelmarkIsNotNull() {
            addCriterion("delmark is not null");
            return (Criteria) this;
        }

        public Criteria andDelmarkEqualTo(Integer value) {
            addCriterion("delmark =", value, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkNotEqualTo(Integer value) {
            addCriterion("delmark <>", value, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkGreaterThan(Integer value) {
            addCriterion("delmark >", value, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkGreaterThanOrEqualTo(Integer value) {
            addCriterion("delmark >=", value, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkLessThan(Integer value) {
            addCriterion("delmark <", value, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkLessThanOrEqualTo(Integer value) {
            addCriterion("delmark <=", value, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkIn(List<Integer> values) {
            addCriterion("delmark in", values, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkNotIn(List<Integer> values) {
            addCriterion("delmark not in", values, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkBetween(Integer value1, Integer value2) {
            addCriterion("delmark between", value1, value2, "delmark");
            return (Criteria) this;
        }

        public Criteria andDelmarkNotBetween(Integer value1, Integer value2) {
            addCriterion("delmark not between", value1, value2, "delmark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fsalery
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fsalery
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}